package com.iluwatar.strategy.com.cherish.strategy.com.cherish.tolerantRecovery;

/**
 * 容错恢复机制：程序正常情况下应该按照某种方式来做，如果发生错误，系统不会崩溃，也不会就此不能继续向下运行，而是有容忍出错的能力。
 *
 * 需求：一个系统中，所有对系统的操作都要有日志记录，通常会把日志记录在数据库里面，方便后续的管理，但是在记录日志到数据库时，可能会发生错误，比如暂时连接步上数据库，那就先记录到文件里面，然后在合适的时候把文件中的记录转录到数据库中。
 * 分许：对于这样的需要，可以考虑策略模式，可以在运行期间动态切换。
 * 实现：示范由上下文来选择具体的策略算法。
 *
 * 步骤：
 *      1）定义日志记录策略接口；
 *      2）实现日志策略接口，先实现默认数据库，假设如果日志长度超过规定值，抛出一个运行时异常。
 *      3）定义策略上下文，
 *          注意：这次是在上下文中实现具体策略算法的选择，不需要客户端指定具体的策略算法。
 *
 * @author zengjia
 */
public interface LogStrategy {

    /**
     * 记录日志方法
     * @param msg 待记录日志
     */
    void log(String msg);
}
